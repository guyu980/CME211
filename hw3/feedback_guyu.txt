FILE:          README
WRITEUP        

COMMENTS:
-This is not really what you do, as you choose not to store most of the data.
-You could have been more explicit on why you did not store cp and xy !

RELEVANT CODE:
To deal with this problem, I divide the whole process into several abstract parts, 
design method for each part, and store some results in the class as internal data 
which can be used later, this is called abstraction and encapsulation.



--------------------------
FILE:          README
WRITEUP        

COMMENTS:
-Your writeup shows a good presentation of your code. However, it does not justify your design choices,
-nor does it developp a lot on the concepts of abstraction, encapsulation or decomposition.

POINTS DEDUCTED: 1


--------------------------
FILE:          airfoil.py
CORRECTNESS    

COMMENTS:
-Be careful, strip strips the / at the end and the beginning of the path !
-If the path starts with a / it makes your code fail...
-Try using rstrip instead !

RELEVANT CODE:
xy, cp = self.load_data(inputdir.strip('/')+'/')



--------------------------
FILE:          airfoil.py
STYLE          

COMMENTS:
-Do you return them instead of storing them to save some storage space in your object ?
-If yes that's a good reason, else you should have used attributes to make it last !

RELEVANT CODE:
return xy, cp



--------------------------
FILE:          airfoil.py
STYLE          

COMMENTS:
-Does this function need the self argument ?
-You can consider using a @staticmethod here !

RELEVANT CODE:
def compute_chord(self, xy):
        """ Compute the chord length by xy data

        Args:
            xy: Coordinate of panel points
        Returns:
            chord: Chord length of an airfoil
        """
        x = [x[0] for x in xy]
        # Get leading and tailing edge point
        leading, trailing = x.index(max(x)), x.index(min(x))
        return math.sqrt(sum([(xy[leading][i] - xy[trailing][i]) ** 2 for i in range(2)]))



--------------------------
FILE:          airfoil.py
CORRECTNESS    

COMMENTS:
-Apart from a small mistake in the handling of the paths, your code works great !
-Good job !

                  


--------------------------
FILE:          airfoil.py
STYLE          

COMMENTS:
-Your code shows a good understanding of OOP and a good decomposition into methods.
-If it is a deliberate choice not to store cp and xy as attributes, then most of your
-methods are in fact static methods that do not require the self argument.
-If this is not deliberate, you should have considered storing them as attributes.
-As a personal comment, I prefer having the init as clean as possible (i.e. only declaring my attributes
-and calling methods). You could have added a load function and a compute function to clean the init.
-Overall, your code is good, well done !

                  


--------------------------

GRADING TA                  
SUNet ID: mrivet, GitHub ID: maximeRivet1
###################################################
STYLE SCORE:                              +
###################################################
WRITEUP SCORE:                           ok
###################################################
CORRECTNESS SCORE:                        +
###################################################
If you have any problem about grading result, please file an issue in your GitHub repo.